% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extendr-wrappers.R
\name{compute_tech_coeff}
\alias{compute_tech_coeff}
\title{Computes technical coefficients matrix.}
\usage{
compute_tech_coeff(intermediate_transactions, total_production)
}
\arguments{
\item{intermediate_transactions}{A \eqn{n x n} matrix of intermediate transactions.}

\item{total_production}{A \eqn{1 x n} vector of total production.}
}
\value{
A \eqn{n x n} matrix of technical coefficients, known as A matrix.
}
\description{
Computes technical coefficients matrix.
}
\details{
It calculates the technical coefficients matrix, which is the columnwise ratio of
intermediate transactions to total production \insertCite{leontief_economia_1983}{fio}.
}
\examples{
# running single threaded to comply with CRAN policies. Ignore for performance.
fio:::set_max_threads(1L)
intermediate_transactions <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), 3, 3)
total_production <- matrix(c(100, 200, 300), 1, 3)
# instantiate iom object
my_iom <- fio::iom$new("test", intermediate_transactions, total_production)
# Calculate the technical coefficients
my_iom$compute_tech_coeff()
# show the technical coefficients
my_iom$technical_coefficients_matrix
}
\references{
insertAllCited{}

Underlined Rust code uses Rayon crate to parallelize the computation by
default, so there is no need to use future or async/await to parallelize.
}
